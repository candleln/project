package com.projecthh.crm.maintenance.controller;

import java.util.ArrayList;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.projecthh.common.ImgUtil;
import com.projecthh.crm.maintenance.service.MaintenanceService;
import com.projecthh.crm.maintenance.vo.MaintenanceVO;
import com.projecthh.crm.maintenance.vo.PageMaker;

@Controller
public class MaintenanceController {

	Logger log = Logger.getLogger(this.getClass());	
	
	@Resource(name = "maintenanceService")
	private MaintenanceService maintenanceService;
	private ImgUtil imgUtil = new ImgUtil();
	
	@RequestMapping(value = "/maintenanceList")
	public ModelAndView maintenanceList(HttpServletRequest request) throws Exception {
		ModelAndView mv = new ModelAndView("crm/MAINTENANCE/MAILIS01"); // jsp파일이름		
		PageMaker pm = new PageMaker();
			if (request.getParameter("page") != null ) {
				//!request.getParameter("page").equals("")
				pm.getMpv().setPage(Integer.parseInt(request.getParameter("page")));				
				ArrayList<MaintenanceVO> maintenance = maintenanceService.maintenanceList(pm.getMpv().getPageStart());
				pm.setTotalCount(maintenance.get(0).getTotalCount());				
				mv.addObject("page",pm);
				mv.addObject("maintenance", maintenance);
			}else {				
				ArrayList<MaintenanceVO> maintenance = maintenanceService.maintenanceList(pm.getMpv().getPageStart());
				if(!maintenance.isEmpty()) {
				pm.setTotalCount(maintenance.get(0).getTotalCount());
				}				
				mv.addObject("maintenance", maintenance);
				mv.addObject("page",pm);				
			}
			
		return mv;
	}	
	
	@RequestMapping(value = "maintenanceDel")
	public ModelAndView maintenanceDelete(HttpServletRequest request) throws Exception {
		
		int m_no = Integer.parseInt(request.getParameter("maintenance_no"));
		maintenanceService.maintenanceDel(m_no);	
		if(!request.getParameter("keyword").equals("")) {
			return new ModelAndView("redirect:mainSearch?page="+request.getParameter("page")+"&keyword="+request.getParameter("keyword"));
		}
		return new ModelAndView("redirect:maintenanceList?page="+request.getParameter("page"));
	}
	@RequestMapping(value = "mainSearch")
	public ModelAndView maintenanceSearch(HttpServletRequest request) throws Exception {
		ModelAndView mv =  new ModelAndView("crm/MAINTENANCE/MAILIS01"); // jsp파일이름
		String key = request.getParameter("keyword");
		/*ArrayList<MaintenanceVO> maintenance = maintenanceService.maintenanceSearch(key);
		mv.addObject("maintenance", maintenance);*/
		PageMaker pm = new PageMaker();
		if (request.getParameter("page") != null ) {//!request.getParameter("page").equals("")
			pm.getMpv().setPage(Integer.parseInt(request.getParameter("page")));
			ArrayList<MaintenanceVO> maintenance = maintenanceService.maintenanceSearch(pm.getMpv().getPageStart(),key);
			if(maintenance!=null) {
				pm.setTotalCount(maintenance.get(0).getTotalCount());			
				mv.addObject("search",key);
				mv.addObject("maintenance", maintenance);
				mv.addObject("page",pm);
				}			
		}else {			
			ArrayList<MaintenanceVO> maintenance = maintenanceService.maintenanceSearch(pm.getMpv().getPageStart(),key);			
			if(!maintenance.isEmpty()) {
			pm.setTotalCount(maintenance.get(0).getTotalCount());			
			mv.addObject("search",key);
			mv.addObject("maintenance", maintenance);
			mv.addObject("page",pm);
			}else {					
					return  new ModelAndView("redirect:maintenanceList");
			}		
		}		
		return mv;
	}
	
	@RequestMapping(value="mainDetail")
	public ModelAndView maintenanceDetail(HttpServletRequest request) throws Exception {
		ModelAndView mv = new ModelAndView("crm/MAINTENANCE/MAIDET01");
		MaintenanceVO mainDetail = null;
		
		/*int m_no = Integer.parseInt(request.getParameter("maintenance_no"));*/
		
		mainDetail = selectOne(request);		
		mainDetail.setPage(Integer.parseInt(request.getParameter("page")));
		mainDetail.setSearch(request.getParameter("keyword"));
		mv.addObject("mainDetail",mainDetail);
		return mv;
	}
	@RequestMapping(value="/mainInsert")
	public ModelAndView maintenanceIns() throws Exception {	
		return new ModelAndView("crm/MAINTENANCE/MAIINS01"); 
	}
	
	@RequestMapping(value="mainIns")
	public ModelAndView mainIns(HttpServletRequest request,@RequestParam("file") MultipartFile file)throws Exception  {	
		request.setCharacterEncoding("UTF-8");
		mainInsOrUpd(request,file);
		return new ModelAndView("redirect:maintenanceList");
	}	
	@RequestMapping(value="/mainEdit")
	public ModelAndView maintenanceUpd(HttpServletRequest request) throws Exception  {
		ModelAndView mv =  new ModelAndView("crm/MAINTENANCE/MAIUPD01");
		MaintenanceVO mainDetail = new MaintenanceVO();				
		mainDetail = selectOne(request);
		mainDetail.setPage(Integer.parseInt(request.getParameter("page")));
		mainDetail.setSearch(request.getParameter("keyword"));
		mv.addObject("mainDetail",mainDetail);		
		return mv; 
	}
	@RequestMapping(value="mainUpdate")
	public ModelAndView maintenanceUpdAction(HttpServletRequest request,@RequestParam("file") MultipartFile file) throws Exception{
		request.setCharacterEncoding("UTF-8");
		mainInsOrUpd(request,file);		
		return new ModelAndView("redirect:mainDetail?maintenance_no="+ request.getParameter("maintenance_no")+"&page="+request.getParameter("page")+"&keyword="+request.getParameter("keyword"));
	}
	
	public MaintenanceVO selectOne(HttpServletRequest request)throws Exception {
		MaintenanceVO mainDetail = new MaintenanceVO();		
		int m_no = Integer.parseInt(request.getParameter("maintenance_no"));
		mainDetail = maintenanceService.maintenanceDetail(m_no);
		return mainDetail;
	}
	
	public void mainInsOrUpd(HttpServletRequest request,@RequestParam("file") MultipartFile file) throws Exception{
		request.setCharacterEncoding("UTF-8");
		MaintenanceVO mvo = new MaintenanceVO();		
		if (request.getParameter("type").equals("insert")) {
			mvo.setBusiness_no(request.getParameter("business_no"));
			mvo.setEmployee_code(request.getParameter("employee_code"));
			mvo.setTitle(request.getParameter("title"));
			mvo.setNote(request.getParameter("note"));			
			if (!file.getOriginalFilename().equals("")) {
				mvo.setAttachment_file(imgUtil.fileUp(request, file));
			}
			maintenanceService.mainInsert(mvo);	
		}else if(request.getParameter("type").equals("update")) {						
			mvo.setMaintenance_no(Integer.parseInt(request.getParameter("maintenance_no")));
			mvo.setEmployee_code(request.getParameter("employee_code"));
			mvo.setTitle(request.getParameter("title"));
			mvo.setNote(request.getParameter("note"));				
			if (!file.getOriginalFilename().equals("")) {
				mvo.setAttachment_file(imgUtil.fileUp(request, file));
			}
			maintenanceService.mainUpdate(mvo);
		}		
	}	
}